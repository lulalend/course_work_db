<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>blablacar2</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>blablacar2</name>
    <description>blablacar2</description>
    <properties>
        <java.version>17</java.version>
        <kotlin.version>1.9.20</kotlin.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-docker-compose</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.27</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>5.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>2.2.8</version>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>2.0.2</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>2.0.1.Final</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-models</artifactId>
            <version>2.2.8</version>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${project.basedir}/src/main/resources/spec/api.yaml
                            </inputSpec>
                            <apiPackage>com.arslanka.blablacar2.api</apiPackage>
                            <modelPackage>com.arslanka.blablacar2.model</modelPackage>
                            <generatorName>kotlin-spring</generatorName>
                            <configOptions>
                                <useTags>true</useTags>
                                <interfaceOnly>true</interfaceOnly>
                                <delegatePattern>false</delegatePattern>
                                <modelNameSuffix>Dto</modelNameSuffix>
                                <useOptional>false</useOptional>
                                <serviceInterface>false</serviceInterface>
                                <serviceImplementation>false</serviceImplementation>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>9.22.3</version>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>jooq</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-codegen-maven</artifactId>
                        <version>${jooq.version}</version>
                        <executions>
                            <execution>
                                <id>generate-jooq-sources</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <jdbc>
                                        <driver>org.postgresql.Driver</driver>
                                        <url>jdbc:postgresql://127.0.0.1:5432/blablacar</url>
                                        <properties>
                                            <property>
                                            <key>user</key>
                                                <value>postgres</value>
                                            </property>
                                            <property>
                                                <key>password</key>
                                                <value>admin</value>
                                            </property>
                                        </properties>
                                    </jdbc>
                                    <generator>
                                        <name>org.jooq.codegen.KotlinGenerator</name>
                                        <generate>

                                            <!-- Tell the KotlinGenerator to generate properties in addition to methods for these paths. Default is true. -->
                                            <implicitJoinPathsAsKotlinProperties>true</implicitJoinPathsAsKotlinProperties>
                                            <!--  Workaround for Kotlin generating setX() setters instead of setIsX() in byte code for mutable properties called
                                                  <code>isX</code>. Default is true. -->
                                            <kotlinSetterJvmNameAnnotationsOnIsPrefix>true</kotlinSetterJvmNameAnnotationsOnIsPrefix>
                                            <!-- Generate POJOs as data classes, when using the KotlinGenerator. Default is true. -->
                                            <pojosAsKotlinDataClasses>true</pojosAsKotlinDataClasses>

                                            <!-- Generate non-nullable types on POJO attributes, where column is not null. Default is false. -->
                                            <kotlinNotNullPojoAttributes>false</kotlinNotNullPojoAttributes>

                                            <!-- Generate non-nullable types on Record attributes, where column is not null. Default is false. -->
                                            <kotlinNotNullRecordAttributes>false</kotlinNotNullRecordAttributes>

                                            <!-- Generate non-nullable types on interface attributes, where column is not null. Default is false. -->
                                            <kotlinNotNullInterfaceAttributes>false</kotlinNotNullInterfaceAttributes>

                                        </generate>
                                        <database>
                                            <name>org.jooq.meta.postgres.PostgresDatabase</name>
                                            <inputSchema>public</inputSchema>
                                            <outputSchemaToDefault>true</outputSchemaToDefault>
                                            <outputCatalogToDefault>true</outputCatalogToDefault>
                                            <properties>
                                                <property>
                                                    <key>sort</key>
                                                    <value>semantic</value>
                                                </property>
                                                <property>
                                                    <key>scripts</key>
                                                    <value>src/main/resources/db/migration/sql/*</value>
                                                </property>
                                                <property>
                                                    <key>defaultNameCase</key>
                                                    <value>lower</value>
                                                </property>
                                            </properties>
                                        </database>
                                        <target>
                                            <packageName>org.jooq.sources</packageName>
                                            <directory>target/generated-sources/jooq</directory>
                                        </target>
                                    </generator>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
